SET ECHO ON
SET DEFINE OFF
SET SERVEROUTPUT ON
WHENEVER SQLERROR CONTINUE ROLLBACK

DECLARE

	ELEMENT_CONT number;

	V_ENTITY_NAME ESB_CDM_ENTITY.NAME%TYPE;

	V_FIELD_NAME ESB_CDM_FIELD.NAME%TYPE;

	V_SOURCE_SYSTEM_CODE ESB_SYSTEM.CODE%TYPE;
	V_DESTINATION_SYSTEM_CODE ESB_SYSTEM.CODE%TYPE;
	V_SOURCE_CODE ESB_MAPPING.SOURCE_CODE%TYPE;
	V_DESTINATION_CODE ESB_MAPPING.DESTINATION_CODE%TYPE;
	V_SERVICE_NAME ESB_SERVICE.NAME%TYPE;

	PROCEDURE CREATE_ENTITY IS
	BEGIN

		SELECT COUNT (*) INTO ELEMENT_CONT FROM ESB_CDM_ENTITY WHERE NAME = V_ENTITY_NAME;
		IF ELEMENT_CONT = 0 THEN
		INSERT INTO ESB_CDM_ENTITY(ID,NAME,Maj_Version,DESCRIPTION,RCD_STATUS) values ( ESB_CDM_ENTITY_SEQ.NEXTVAL,V_ENTITY_NAME,'1',V_ENTITY_NAME,'1');
		ELSE
		DBMS_OUTPUT.PUT_LINE('LA ENTITY '|| V_ENTITY_NAME || ' YA ESTA CREADA');
		END IF;

	END CREATE_ENTITY;

	PROCEDURE CREATE_FIELD IS
	BEGIN

		SELECT COUNT (*) INTO ELEMENT_CONT FROM ESB_CDM_FIELD WHERE NAME = V_FIELD_NAME AND ENTITY_ID=(SELECT ID FROM ESB_CDM_ENTITY WHERE NAME=V_ENTITY_NAME);
		IF element_cont = 0 THEN
		INSERT INTO ESB_CDM_FIELD( ID,ENTITY_ID,NAME,DESCRIPTION,RCD_STATUS) values ( ESB_CDM_FIELD_SEQ.NEXTVAL,( SELECT ID FROM ESB_CDM_ENTITY WHERE NAME = V_ENTITY_NAME) ,V_FIELD_NAME,V_FIELD_NAME,'1');
		ELSE
		DBMS_OUTPUT.PUT_LINE('EL FIELD '|| V_FIELD_NAME || ' YA ESTA CREADA');
		END IF;

	END CREATE_FIELD;

	PROCEDURE CREATE_MAPPING IS
	BEGIN
		SELECT COUNT (*) INTO ELEMENT_CONT FROM ESB_MAPPING WHERE DESTINATION_SYSTEM = ( SELECT ID FROM ESB_SYSTEM WHERE CODE = V_DESTINATION_SYSTEM_CODE) AND SOURCE_SYSTEM = ( SELECT ID FROM ESB_SYSTEM WHERE CODE = V_SOURCE_SYSTEM_CODE) AND SOURCE_CODE= V_SOURCE_CODE AND DESTINATION_CODE=V_DESTINATION_CODE AND CONTEXT= V_SERVICE_NAME AND FIELD_ID=(SELECT ID FROM ESB_CDM_FIELD WHERE NAME = V_FIELD_NAME AND ENTITY_ID = ( SELECT ID FROM ESB_CDM_ENTITY WHERE NAME = V_ENTITY_NAME ));
		IF ELEMENT_CONT = 0 THEN
		INSERT INTO ESB_MAPPING( ID,SOURCE_SYSTEM,SOURCE_CODE,DESTINATION_SYSTEM,DESTINATION_CODE,FIELD_ID,CONTEXT,RCD_STATUS) values ( ESB_MAPPING_SEQ.NEXTVAL,( SELECT ID FROM ESB_SYSTEM WHERE CODE = V_SOURCE_SYSTEM_CODE),V_SOURCE_CODE,( SELECT ID FROM ESB_SYSTEM WHERE CODE = V_DESTINATION_SYSTEM_CODE),V_DESTINATION_CODE,(SELECT * FROM( SELECT ID FROM ESB_CDM_FIELD WHERE NAME = V_FIELD_NAME AND ENTITY_ID = ( SELECT ID FROM ESB_CDM_ENTITY WHERE NAME = V_ENTITY_NAME ) ORDER BY ID DESC) WHERE ROWNUM=1),V_SERVICE_NAME,'1');
		ELSE
		DBMS_OUTPUT.PUT_LINE('EL MAPPING '|| V_SOURCE_CODE || ' PARA ESTE SERVICIO RELACIONADO A ESTE SISTEMA, YA FUE CREADA');
		END IF;
	END CREATE_MAPPING;

BEGIN
<#list mappings as mapping>
	V_ENTITY_NAME := '${mapping.entity}';
	CREATE_ENTITY;

	V_FIELD_NAME := '${mapping.field}';
	CREATE_FIELD;

	V_SOURCE_SYSTEM_CODE := '${mapping.sourceSystem}';
	V_DESTINATION_SYSTEM_CODE := '${mapping.destinationSystem}';
	V_SOURCE_CODE := '${mapping.sourceCode}';
	V_DESTINATION_CODE := '${mapping.destinationCode}';
	V_SERVICE_NAME := '${mapping.context}';
	CREATE_MAPPING;
	</#list>
END;
/

COMMIT;
/*SI ES NECESARIO INGRESAR MAS DE UN ENTITY, FIELD O MAPPING, LOS ATRIBUTOS QUE SE REPITAN LLEVARAN UN VALOR NUMERICO. EJ: V_ENTITY_NAME_1, V_ENTITY_NAME_2.....V_ENTITY_NAME_N*/